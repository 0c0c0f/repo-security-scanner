eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIG15LWJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHJlcG8tc2VjdXJpdHktc2Nhbm5lciAuCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAoKICBpbWFnZV90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK3JlcG9fc2VjdXJpdHlfc2Nhbm5lcl9ib3QiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyByZXBvLXNlY3VyaXR5LXNjYW5uZXIgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3JlcG8tc2VjdXJpdHktc2Nhbm5lcjoke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3JlcG8tc2VjdXJpdHktc2Nhbm5lcjoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAojICAgICAgYnJhbmNoOiBtYXN0ZXIgCgoKICBkZXBsb3lfdG9fZGV2OgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDpsYXRlc3QKICAgIGVudmlyb25tZW50OgogICAgICAtIEtVQkVfU0VSVkVSPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgICAgLSBLVUJFX05BTUVTUEFDRT1kZXYtaW5kdWN0aW9uCiAgICAgIC0gSU5TRUNVUkVfU0tJUF9UTFNfVkVSSUZZPXRydWUKIAoKICAgICAgLSBJTlNFQ1VSRV9TS0lQX1RMU19WRVJJRlk9dHJ1ZQogICAgY29tbWFuZHM6CiAgICAgIC0gY2Qga3ViZQogICAgICAtIGtkIC1mIHNlY3JldHMueW1sIC1mIGRlcGxveW1lbnQueW1sIC1mIGluZ3Jlc3MueW1sIC1mIHNlcnZpY2UueW1sCiAgICB3aGVuOgogICAgICBldmVudDogW2RlcGxveW1lbnQsIHB1c2hdCgoKCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Igo.LkFebgkSWZ4KFx2ImDCzez9ioBKyS0G6kZZqzvW0alA